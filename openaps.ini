[device "curl"]
fields = 
cmd = bash
vendor = openaps.vendors.process
args = -c "curl -s https://colinsbg.azurewebsites.net/api/v1/entries.json | json -e 'this.glucose = this.sgv'"

[report "monitor/glucose.json"]
device = curl
use = shell
reporter = text

[report "last_ten_cgm_readings.json"]
device = curl
remainder = []
use = shell
json_default = True
reporter = JSON

[device "my722"]
vendor = openaps.vendors.medtronic
extra = my722.ini

[report "last_four_pump_hours.json"]
device = my722
hours = 4.0
use = iter_pump_hours
reporter = JSON

[alias]
last_four_hours = report invoke last_four_pump_hours.json last_ten_cgm_readings.json
gather-profile = ! bash -c "openaps report invoke settings/settings.json settings/bg_targets.json settings/insulin_sensitivities.json settings/basal_profile.json settings/profile.json"
monitor-pump = report invoke monitor/clock.json monitor/temp_basal.json monitor/pumphistory.json monitor/iob.json
monitor-cgm = report invoke monitor/glucose.json
preflight = ! bash -c "rm -f monitor/clock.json 2>/dev/null && openaps report invoke monitor/clock.json 2>/dev/null >/dev/null && grep -q T monitor/clock.json && echo PREFLIGHT OK || ( mm-stick warmup || oref0-reset-usb; echo PREFLIGHT FAIL; exit 1 )"
gather = ! bash -c "rm -f monitor/*; openaps monitor-cgm && openaps monitor-pump && openaps report invoke monitor/iob.json"
loop = ! bash -c "(echo "" && date && (openaps preflight && openaps gather && openaps report invoke enact/suggested.json && cat enact/suggested.json) || echo PREFLIGHT or GATHER Failure)"

[device "oref0"]
vendor = openaps.vendors.process
extra = oref0.ini

[device "get-profile"]
vendor = openaps.vendors.process
extra = get-profile.ini

[device "calculate-iob"]
vendor = openaps.vendors.process
extra = calculate-iob.ini

[device "determine-basal"]
vendor = openaps.vendors.process
extra = determine-basal.ini

[report "settings/settings.json"]
device = my722
use = read_settings
reporter = JSON

[report "settings/bg_targets.json"]
device = my722
use = read_bg_targets
reporter = JSON

[report "settings/insulin_sensitivities.json"]
device = my722
use = read_insulin_sensitivities
reporter = JSON

[report "settings/basal_profile.json"]
device = my722
use = read_basal_profile_std
reporter = JSON

[report "settings/profile.json"]
use = shell
bg_targets = settings/bg_targets.json
settings = settings/settings.json
basal_profile = settings/basal_profile.json
reporter = text
json_default = True
max_iob = max_iob.json
device = get-profile
remainder = []
insulin_sensitivities = settings/insulin_sensitivities.json

[device "units"]
vendor = openaps.vendors.units
extra = units.ini

[report "monitor/pumphistory.json"]
device = my722
hours = 4.0
use = iter_pump_hours
reporter = JSON

[report "monitor/clock.json"]
device = my722
use = read_clock
reporter = JSON

[report "monitor/iob.json"]
profile = settings/profile.json
use = shell
reporter = JSON
clock = monitor/clock.json
json_default = True
pumphistory = monitor/pumphistory.json
device = calculate-iob
remainder = []

[report "enact/suggested.json"]
profile = settings/profile.json
use = shell
temp_basal = monitor/temp_basal.json
reporter = text
json_default = True
device = determine-basal
remainder = []
iob = monitor/iob.json
glucose = monitor/glucose.json

[report "monitor/temp_basal.json"]
device = my722
use = read_temp_basal
reporter = JSON

[report "enact/enacted.json"]
device = my722
input = enact/suggested.json
use = set_temp_basal
reporter = JSON

